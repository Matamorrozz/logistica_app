plugins {
    id "com.android.application"
    id "kotlin-android"
    // El plugin de Flutter se aplica después de los plugins de Android y Kotlin.
    id "dev.flutter.flutter-gradle-plugin"
    // Aplica el plugin de Google Services con la versión que necesites.
    id "com.google.gms.google-services" version "4.4.2"
}

android {
    // Lee el archivo local.properties para obtener flutter.versionCode y flutter.versionName.
    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
    }
    def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: "1"
    def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: "1.0"

    namespace = "com.example.logistica_ar"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.example.logistica_ar"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // Se usa la firma de debug para simplificar; revisa esto para producción.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
